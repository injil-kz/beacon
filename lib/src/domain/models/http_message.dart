/// Enum representing HTTP methods.
///
/// This enum includes the following HTTP methods:
/// - [GET]: Used to request data from a specified resource.
/// - [POST]: Used to send data to a server to create/update a resource.
/// - [PUT]: Used to update a current resource with new data.
/// - [DELETE]: Used to delete a specified resource.
/// - [PATCH]: Used to apply partial modifications to a resource.
/// - [HEAD]: Used to request the headers of a resource.
/// - [OPTIONS]: Used to describe the communication options for the target resource.
// ignore: public_member_api_docs
enum BeaconHttpMethod { GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS }

/// An abstract class representing an HTTP message in the Beacon library.
/// This class serves as a base for creating HTTP request and response models.
abstract class BeaconHttpMessage {
  /// Constructs a [BeaconHttpMessage] instance.
  ///
  /// This constructor initializes a new instance of the [BeaconHttpMessage] class.
  const BeaconHttpMessage({
    this.xRequestId,
  });

  /// The unique identifier for the message.
  /// This identifier is used to correlate requests and responses.
  /// It is generated by the client and included in the `X-Request-ID` header.
  /// see more at https://http.dev/x-request-id
  final String? xRequestId;
}
